---
- name: "Obfuscation du mot de passe pour rclone"
  ansible.builtin.shell: |
    rclone obscure "{{ ovh_sftp_password }}"
  register: "ovh_sftp_password_for_rclone"

- name: "[DEBUG] Information sur la connection SFTP"
  ansible.builtin.debug:
    msg:
      - "URL SFTP: {{ ovh_sftp_username }}@{{ ovh_sftp_hostname }}"
      - "Mot de passe SFTP: {{ ovh_sftp_password }}"
      - "Mot de passe SFTP (obfuscé): {{ ovh_sftp_password_for_rclone.stdout }}"
  when: "debug_enabled"

- name: "[DEBUG] Information sur la base de donnée"
  ansible.builtin.debug:
    msg:
      - "Nom d'hôte: {{ database_hostname }}"
      - "Nom de la base de donnée: {{ database_name }}"
      - "Utilisateur de la base de donnée: {{ database_username }}"
      - "Mot de passe: {{ database_password }}"
  when: "debug_enabled"

- name: "[DEBUG] Information sur la configuration"
  ansible.builtin.debug:
    msg:
      - "AUTH_KEY: {{ wordpress_config_auth_key }}"
      - "SECURE_AUTH_KEY: {{ wordpress_config_secure_auth_key }}"
      - "LOGGED_IN_KEY: {{ wordpress_config_logged_in_key }}"
      - "NONCE_KEY: {{ wordpress_config_nonce_key }}"
      - "AUTH_SALT: {{ wordpress_config_auth_salt }}"
      - "SECURE_AUTH_SALT: {{ wordpress_config_secure_auth_salt }}"
      - "LOGGED_IN_SALT: {{ wordpress_config_logged_in_salt }}"
      - "NONCE_SALT: {{ wordpress_config_nonce_salt }}"
  when: "debug_enabled"

- name: "Création d'un répertoire de travail"
  ansible.builtin.tempfile:
    state: "directory"
    prefix: "chevregrisette."
    suffix: "wordpress"
  register: "wordpress_build_dir"

- name: "Création du répertoire des sources"
  ansible.builtin.file:
    path: "{{ wordpress_build_dir.path }}/sources"
    state: "directory"
    mode: "0755"
  register: "wordpress_sources_dir"

- name: "Création du répertoire de distribution"
  ansible.builtin.file:
    path: "{{ wordpress_build_dir.path }}/dist"
    state: "directory"
    mode: "0755"
  register: "wordpress_dist_dir"

- name: "Installation et configuration de Wordpress"
  block:
    - name: "Téléchargement de l'archive depuis le site officiel"
      ansible.builtin.get_url:
        url: "{{ wordpress_download_url }}"
        dest: "{{ wordpress_sources_dir.path }}/{{ wordpress_archive_filename }}"
        mode: '0644'

    - name: "Extraction de l'archive wordpress dans le répertoire de distribution"
      ansible.builtin.unarchive:
        src: "{{ wordpress_sources_dir.path }}/{{ wordpress_archive_filename }}"
        dest: "{{ wordpress_dist_dir.path }}"
        extra_opts:
          - "--strip-components=1"

    - name: "Création du fichier de configuration de wordpress"
      ansible.builtin.template:
        src: "wp-config.php.j2"
        dest: "{{ wordpress_dist_dir.path }}/wp-config.php"
        mode: "0644"

    - name: "Copie de wordpress sur OVH"
      ansible.builtin.shell: |
        rclone copy --progress "{{ wordpress_dist_dir.path }}" ovh:/home/{{ ovh_sftp_username }}/blog_prod
      environment:
        RCLONE_CONFIG_OVH_TYPE: "sftp"
        RCLONE_CONFIG_OVH_SHELL_TYPE: "unix"
        RCLONE_CONFIG_OVH_DISABLE_HASHCHECK: "true"
        RCLONE_CONFIG_OVH_HOST: "{{ ovh_sftp_hostname }}"
        RCLONE_CONFIG_OVH_USER: "{{ ovh_sftp_username }}"
        RCLONE_CONFIG_OVH_PASS: "{{ ovh_sftp_password_for_rclone.stdout }}"
      register: "wordpress_rclone_sync_cmd"

    - name: "Retour de la commande de copie"
      ansible.builtin.debug:
        msg: "{{ wordpress_rclone_sync_cmd.stdout_lines }}"
  always:
    - name: "Nettoyage des répertoires"
      ansible.builtin.file:
        path: "{{ wordpress_build_dir.path }}"
        state: "absent"
  when: "wordpress_build_dir.path is defined"
